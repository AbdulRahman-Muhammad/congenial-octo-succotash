name: Workflow App

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        runner: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y tor tor-geoipdb \
            libnss3 libnspr4 libcups2 libatk1.0-0 libatk-bridge2.0-0 \
            libatspi2.0-0 libxcomposite1 libxdamage1 libxrandr2 \
            libgbm1 libxkbcommon0 curl geoip-bin geoip-database net-tools

      - name: Configure and Start
        run: |
          SOCKS_PORT=$((9050 + ${{ matrix.runner }}))
          CONTROL_PORT=$((9150 + ${{ matrix.runner }}))
          DIR=/home/runner/.runner-${{ matrix.runner }}
          mkdir -p $DIR

          cat > $DIR/torrc <<EOF
          SocksPort $SOCKS_PORT
          ControlPort $CONTROL_PORT
          CookieAuthentication 1
          DataDirectory $DIR
          GeoIPFile /usr/share/tor/geoip
          GeoIPv6File /usr/share/tor/geoip6
          Log notice stdout
          ExitNodes {jp}
          StrictNodes 1
          EOF

          echo "🚀 Starting for runner ${{ matrix.runner }}..."
          tor -f $DIR/torrc &
          sleep 10

          for i in {1..15}; do
            if netstat -tlnp | grep -q "$SOCKS_PORT.*tor"; then
              echo "✅ Tor running on port $SOCKS_PORT"
              break
            fi
            echo "Waiting for port $SOCKS_PORT... ($i/15)"
            sleep 8
          done

      - name: Verification
        run: |
          SOCKS_PORT=$((9050 + ${{ matrix.runner }}))
          echo "🌐 Checking..."
          EXIT_IP=$(curl -s --socks5 127.0.0.1:$SOCKS_PORT https://api.ipify.org || echo "failed")
          echo "✅ Final: $EXIT_IP"
          echo "🌏 Location (via geoiplookup):"
          geoiplookup "$EXIT_IP" || true

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install stem playwright
          playwright install chromium

      - name: Run App
        run: |
          SOCKS_PORT=$((9050 + ${{ matrix.runner }}))
          CONTROL_PORT=$((9150 + ${{ matrix.runner }}))
          export PROXY_URL="socks5://127.0.0.1:$SOCKS_PORT"
          export CONTROL_PORT
          export TARGET_URL="https://colle-pedia.blogspot.com/"
          export RUNNER_ID=${{ matrix.runner }}
          echo "[Runner $RUNNER_ID] Using PROXY=$PROXY_URL"
          python app.py
